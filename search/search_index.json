{"config":{"lang":["en","fr"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Introduction","text":""},{"location":"index.html#bases-de-donnees-nosql-avec-neo4j","title":"Bases de Donn\u00e9es NoSQL avec Neo4j","text":""},{"location":"index.html#objectifs","title":"Objectifs","text":"<ul> <li>Installer Neo4j et cr\u00e9er une base de donn\u00e9es orient\u00e9e graphe</li> <li>Interroger une base de donn\u00e9es orient\u00e9e graphe avec Cypher</li> <li>Importer des donn\u00e9es dans Neo4j</li> <li>Cr\u00e9er une application autour de Neo4j avec Python</li> <li>Passer \u00e0 l'\u00e9chelle avec un cluster Neo4j</li> </ul>"},{"location":"index.html#ressources","title":"Ressources","text":"<p>Outils</p> <ul> <li>Docker </li> <li>Python </li> </ul> <p>Sources et r\u00e9f\u00e9rence</p> <ul> <li>Documentation Neo4j</li> <li>T\u00e9l\u00e9charger Neo4j</li> </ul>"},{"location":"index.html#presentation-de-neo4j","title":"Pr\u00e9sentation de Neo4j","text":"<p>Neo4j est un Syst\u00e8me de Gestion de Bases de Donn\u00e9es orient\u00e9 graphe open source. Il manipule les donn\u00e9es sous leur nature connect\u00e9e en les repr\u00e9sentant sous la forme de graphe de fa\u00e7on native.</p> <p>Cette repr\u00e9sentation trouve ses sources dans la th\u00e9orie des graphes par Leonhard Euler et exploite naturellement ses algorithmes dans des applications comme :</p> <ul> <li>Syst\u00e8me de recommandation en temps r\u00e9el</li> <li>D\u00e9tection de fraude</li> <li>Transport et logistique</li> <li>D\u00e9tection de communaut\u00e9s</li> </ul> <p>Des exemples de cas d'utilisation sont publi\u00e9s sur Neo4j GraphGists </p>"},{"location":"index.html#elements-de-graphe","title":"\u00c9l\u00e9ments de Graphe","text":"<p>Un graphe est compos\u00e9 de 2 \u00e9l\u00e9ments :</p> <ol> <li>Les noeuds (Vertices) : repr\u00e9sentant les entit\u00e9s du domaines. Ils poss\u00e8dent un ou plusieurs labels (\u00e9tiquettes) refl\u00e9tant leurs types et sous-types. Chaque noeud est d\u00e9crit par un ensemble de propri\u00e9t\u00e9s ou attributs.</li> <li>Les relations (Edges) : qui sont les arcs reliant les noeuds et repr\u00e9sentant une relation entre deux noeuds. Une relation poss\u00e8de un type et peut avoir aussi des propri\u00e9t\u00e9s.</li> </ol> <p>Par exemple, le grpahe ci-dessous repr\u00e9sente deux types de noeuds : Person et Movie (Personne et Film) et les relations entre eux : ACTED_IN, DIRECTED et REVIEWED (a_jou\u00e9_dans, a_r\u00e9alis\u00e9 et a_\u00e9valu\u00e9).</p> <p></p> <p>Ce graphe comporte 1 neoud de type Movie et 4 noeuds de type Person. Deux personnes (\"Richard Harris\" et \"Gene Hackman\") ont jou\u00e9 dans le film \"Unforgiven\". \"Clint Eastwood\" \u00e0 jou\u00e9 dans ce film et l'a r\u00e9alis\u00e9. \"Jessica Thompson\" a donn\u00e9 un \u00e9valuation pour le film.</p> <p>Le film poss\u00e8de les propri\u00e9t\u00e9s released, tagline et title : </p> <p>La relation ACTED_IN poss\u00e8de la propri\u00e9t\u00e9 roles : </p>"},{"location":"index.html#caracteristiques","title":"Caract\u00e9ristiques","text":"<p>Neo4j pr\u00e9sente les caract\u00e9ristiques et les fonctionnalit\u00e9s suivantes :</p> <ul> <li>Conformit\u00e9 aux propri\u00e9t\u00e9s ACID garantissant une int\u00e9grit\u00e9 des donn\u00e9es pour des applications OLTP/OLAP.</li> <li>Une mod\u00e9lisation en graphe de propri\u00e9t\u00e9s intuitive et flexible.</li> <li>Un langage (Cypher) simple et expressif.</li> <li>Support des langages Java, Python, .Net, Javascript et Go.</li> <li>Des outils : Data-importer pour ETL, Browser pour les requ\u00eates, Bloom pour la visualisation, le client Neo4j Desktop ...</li> <li>Des connecteurs pour l'int\u00e9gration avec Kafka, outils BI, ...</li> <li>Mise \u00e0 l'\u00e9chelle horizontale</li> <li>Optimisation des requ\u00eates (1000x plus rapide que les SGBDR sur les requ\u00eates complexes)</li> <li>Administration simplifi\u00e9e avec Neo4j OPS Manager</li> <li>Importation batch et incr\u00e9mentale</li> </ul> <p>Neo4j est le leader du classement des SGDB orient\u00e9s Graphe selon DB-Engines </p> <p>Neo4j figure parmi les 20 SGBD les plus utilis\u00e9s source</p> <p></p>"},{"location":"cluster.html","title":"Cluster Neo4j","text":""},{"location":"cluster.html#cluster-neo4j","title":"Cluster Neo4j","text":""},{"location":"cluster.html#introduction-et-architecture","title":"Introduction et architecture","text":""},{"location":"cluster.html#modes-dun-serveur","title":"Modes d'un serveur","text":"<p>Les serveurs dans un cluster Neo4j ont deux modes de fonctionnement par Base de donn\u00e9es h\u00e9berg\u00e9e. Ils peuvent \u00eatre des serveurs Primary  pour certaines BD et/ou Secondary pour d'autres BD.</p> <p>Dans la figure ci-dessous, les serveurs dans le cercle bleu h\u00e9berge la BD BAR et ceux dans le cercle rouge la BD FOO. Certains sont en mode Primary et d'autres en mode Secondary.</p> <p>Le serveur \u00e0 l'intersection h\u00e9berge le BD FOO en mode Primary et BAR en mode Secondary.</p> <p></p> <p>C'est identique \u00e0 la notion des noeuds primaires et secondaires dans un Replica Set MongoDB.</p> <p>Un serveur Primary est utilis\u00e9 dans les op\u00e9rations de lecture/\u00e9criture.  Les primaires de la base de donn\u00e9es assurent la haute disponibilit\u00e9 en r\u00e9pliquant toutes les transactions \u00e0 l'aide du protocole Raft. Ce protocole garantit la p\u00e9rennit\u00e9 des donn\u00e9es en attendant que la majorit\u00e9 des primaires d'une base de donn\u00e9es (N/2+1) acquittent une transaction avant de la valider. </p> <p>Un serveur primaire est \u00e9lu comme r\u00e9dacteur primaire qui ex\u00e9cute l'op\u00e9ration d'\u00e9criture du client et r\u00e9plique de mani\u00e8re synchrone les \u00e9critures aux autres primaires. </p> <p>Les secondaires de la base de donn\u00e9es r\u00e9pliquent les \u00e9critures de mani\u00e8re asynchrone \u00e0 partir de membres plus \u00e0 jour du cluster.</p> <p>La principale responsabilit\u00e9 des serveurs secondaires est de mettre \u00e0 l'\u00e9chelle les charges de travail en lecture. En raison de leur nature asynchrone, les serveurs secondaires peuvent ne pas fournir toutes les transactions effectu\u00e9es sur le(s) serveur(s) primaire(s).</p>"},{"location":"cluster.html#etats-dun-serveur","title":"\u00c9tats d'un serveur","text":"<p>Un serveur Neo4j peut avoir l'un des 5 \u00e9tats :</p> <ul> <li>Free : Quand un serveur est d\u00e9couvert (discovery service) il est ajout\u00e9 dans cet \u00e9tat avec un ID g\u00e9n\u00e9r\u00e9 automatiquement. Il ne fait pas encore partie du cluster et ne peut pas h\u00e9berger des bases de donn\u00e9es.</li> <li>Enabled : Pour pouvoir utiliser un srveur Free, doit passer \u00e0 l'\u00e9tat Enabled par la commande <code>ENABLE SERVER</code>.</li> <li>Deallocating : \u00c9tat pr\u00e9c\u00e9dant la suppression d'un serveur afin de r\u00e9allouer les BD dans d'autres serveurs.</li> <li>Cordoned : Un \u00e9tat indiquant que le serveur ne peut \u00eatre allou\u00e9 pour h\u00e9berger de nouvelles BD sans perdre les BD qu'il h\u00e9berge d\u00e9j\u00e0.e</li> <li>Dropped : Apr\u00e8s la commande <code>DROP SERVER</code>, le serveur est supprim\u00e9 du cluster. Il ne peut plus rejoindre le cluster que s'il obtient un nouveau ID par l'outil <code>neo4j-admin unbind</code>.</li> </ul> <p></p>"},{"location":"cluster.html#deployer-un-cluseter-neo4j-sur-docker","title":"D\u00e9ployer un cluseter Neo4j sur Docker","text":"<p> Cr\u00e9er les fichiers de configuration <code>neo4j.conf</code> qui seront plac\u00e9s dans les dossiers conf/serverX ou X est {1, 2, 3 ou 4}. Son contenu est le suivant :</p> <p><pre><code># param\u00e8tre de m\u00e9moire\nserver.memory.pagecache.size=100M\nserver.memory.heap.initial_size=100M\n\n# D\u00e9couverte du cluster bas\u00e9e sur les enregistrement DNS\ndbms.cluster.discovery.type=DNS\n\n#Adresse du r\u00e9seau du cluster pour la d\u00e9couverte automatique\ndbms.cluster.discovery.endpoints=neo4j-network:5000\n\n# hostname/IP address du serveur pour la d\u00e9couverte du cluster\nserver.discovery.advertised_address=$(hostname -i)\n\n# hostname/IP du serveur pour \u00e9change des messages Raft dans le cluster\nserver.cluster.raft.advertised_address=$(hostname)\n\n # hostname/IP du serveur pour la gestion des transactions\nserver.cluster.advertised_address=$(hostname)\n\n# Activer server-side routing\ndbms.routing.enabled=true\n\n# Utiliser server-side routing pour les connexions avec le protocole neo4j://.\ndbms.routing.default_router=SERVER\n\n# hostname/IP du serveur pour le routage intra-cluster.\nserver.routing.advertised_address=$(hostname)\n</code></pre>  modifier les persmissions de ce fichier <code>sudo chmod 640 neo4j.conf</code></p> Param\u00e8tres pour cluster Neo4j Param\u00e8tre Description <code>server.default_advertised_address</code> Nom (FQDN) ou adresse du serveur. <code>server.default_listen_address</code> Adresse de l'interface d'\u00e9coute. Utiliser l'adresse <code>0.0.0.0</code> pour \u00eatre \u00e0 l'\u00e9coute sur toutes les cartes r\u00e9seau. <code>dbms.cluster.discovery.endpoints</code> L'adress d'au moins un serveur du cluster qui doit \u00eatre le m\u00eame pour tous les serveurs membres du cluster. Le comportement de ce param\u00e8tre est modifi\u00e9 par le param\u00e8tre <code>dbms.cluster.discovery.type</code>. <code>initial.dbms.default_primaries_count</code> Le nombre intial des serveur en mode primary. Par d\u00e9faut 1. <code>initial.dbms.default_secondaries_count</code> Le nombre intial des serveur en mode secondary. Par d\u00e9faut 0. Variables d'environment <p>La configuration du cluster utilise aussi des variables d'environnement.</p> Variable Description <code>NEO4J_initial_server_mode__constraint</code> mode PRIMARY ou SECONDARY. <code>NEO4J_dbms_cluster_discovery_endpoints</code> liste des serveurs \u00e0 contacter pour la d\u00e9couverte du cluster. <code>NEO4J_server_discovery_advertised_address</code> hostname/IP \u00e0 publier pour la d\u00e9couverte des membres. <code>NEO4J_server.cluster.advertised_address</code> hostname/IP \u00e0 publier pour la gestion des transactions. <code>NEO4J_server.cluster.raft.advertised_address</code> hostname/IP \u00e0 publier pour la communication dans le cluster. <p> Cr\u00e9er le fichier <code>docker-compose.yml</code>suivant :</p> <pre><code>version: '3.8'\n\n# Custom top-level network\nnetworks:\nneo4j-internal:\n\nservices:\n\nserver1:\n# Image Docker\nimage: ${NEO4J_DOCKER_IMAGE}\n\n# Hostname\nhostname: server1\n\n# R\u00e9seau du cluster (\u00e0 utiliser dans neo4j.conf pour la d\u00e9couverte du cluster) \nnetworks:\nneo4j-internal:\naliases:\n- neo4j-network\n\n# HTTP (7474) et Bolt (7687).\nports:\n- \"7474:7474\"\n- \"7687:7687\"\n\nvolumes:\n#- ./data/server1:/var/lib/neo4j/data\n#- ./logs/server1:/var/lib/neo4j/logs\n- ./conf/server1:/var/lib/neo4j/conf\n#- ./import/server1:/var/lib/neo4j/import\n#- ./metrics/server1:/var/lib/neo4j/metrics\n#- ./licenses/server1:/var/lib/neo4j/licenses\n#- ./ssl/server1:/var/lib/neo4j/ssl\n\n# Les variables d'environnement \u00e0 utiliser et qui doivent \u00eatre pr\u00e9alablement intialis\u00e9es (voir plus bas)\n# Seuelemt la variable pour le choix du mode est intialis\u00e9 ici\nenvironment:\n- NEO4J_ACCEPT_LICENSE_AGREEMENT\n- NEO4J_AUTH\n- EXTENDED_CONF\n- NEO4J_EDITION\n#- NEO4J_initial_server_mode__constraint=PRIMARY\n\n# V\u00e9rifier que le port 7474 est ouvert\nhealthcheck:\ntest: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider localhost:7474 || exit 1\"]\n\n# Utilisateur/Groupe\n#user: ${USER_ID}:${GROUP_ID}\n\nserver2:\nimage: ${NEO4J_DOCKER_IMAGE}\nhostname: server2\nnetworks:\nneo4j-internal:\naliases:\n- neo4j-network\nports:\n- \"7475:7474\"\n- \"7688:7687\"\nvolumes:\n#- ./neo4j.conf:/conf/neo4j.conf\n#- ./data/server2:/var/lib/neo4j/data\n#- ./logs/server2:/var/lib/neo4j/logs\n- ./conf/server2:/var/lib/neo4j/conf\n#- ./import/server2:/var/lib/neo4j/import\n#- ./metrics/server2:/var/lib/neo4j/metrics\n#- ./licenses/server2:/var/lib/neo4j/licenses\n#- ./ssl/server2:/var/lib/neo4j/ssl\nenvironment:\n- NEO4J_ACCEPT_LICENSE_AGREEMENT\n- NEO4J_AUTH\n- EXTENDED_CONF\n- NEO4J_EDITION\n#- NEO4J_initial_server_mode__constraint=PRIMARY\nhealthcheck:\ntest: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider localhost:7474 || exit 1\"]\n#user: ${USER_ID}:${GROUP_ID}\n\nserver3:\nimage: ${NEO4J_DOCKER_IMAGE}\nhostname: server3\nnetworks:\nneo4j-internal:\naliases:\n- neo4j-network\nports:\n- \"7476:7474\"\n- \"7689:7687\"\nvolumes:\n#- ./neo4j.conf:/conf/neo4j.conf\n#- ./data/server3:/var/lib/neo4j/data\n#- ./logs/server3:/var/lib/neo4j/logs\n- ./conf/server3:/var/lib/neo4j/conf\n#- ./import/server3:/var/lib/neo4j/import\n#- ./metrics/server3:/var/lib/neo4j/metrics\n#- ./licenses/server3:/var/lib/neo4j/licenses\n#- ./ssl/server3:/var/lib/neo4j/ssl\nenvironment:\n- NEO4J_ACCEPT_LICENSE_AGREEMENT\n- NEO4J_AUTH\n- EXTENDED_CONF\n- NEO4J_EDITION\n#- NEO4J_initial_server_mode__constraint=PRIMARY\nhealthcheck:\ntest: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider localhost:7474 || exit 1\"]\n#user: ${USER_ID}:${GROUP_ID}\n\nserver4:\nimage: ${NEO4J_DOCKER_IMAGE}\nhostname: server4\nnetworks:\nneo4j-internal:\naliases:\n- neo4j-network\nports:\n- \"7477:7474\"\n- \"7690:7687\"\nvolumes:\n#- ./neo4j.conf:/conf/neo4j.conf\n#- ./data/server4:/var/lib/neo4j/data\n#- ./logs/server4:/var/lib/neo4j/logs\n- ./conf/server4:/var/lib/neo4j/conf\n#- ./import/server4:/var/lib/neo4j/import\n#- ./metrics/server4:/var/lib/neo4j/metrics\n#- ./licenses/server4:/var/lib/neo4j/licenses\n#- ./ssl/server4:/var/lib/neo4j/ssl\nenvironment:\n- NEO4J_ACCEPT_LICENSE_AGREEMENT\n- NEO4J_AUTH\n- EXTENDED_CONF\n- NEO4J_EDITION\n#- NEO4J_initial_server_mode__constraint=SECONDARY\nhealthcheck:\ntest: [\"CMD-SHELL\", \"wget --no-verbose --tries=1 --spider localhost:7474 || exit 1\"]\n#user: ${USER_ID}:${GROUP_ID}\n</code></pre> <p> Ajouter les variables dans un fichier appel\u00e9 <code>.env</code> \u00e0 placer dans le m\u00eame dossier que le fichier docker-compose.yml :</p> <p><pre><code>USER_ID=\"$(id -u)\"\nGROUP_ID=\"$(id -g)\"\nNEO4J_DOCKER_IMAGE=neo4j:5.2.0-enterprise\nNEO4J_EDITION=docker_compose\nEXTENDED_CONF=yes\nNEO4J_ACCEPT_LICENSE_AGREEMENT=yes\nNEO4J_AUTH=neo4j/Passw0rds\n</code></pre>  D\u00e9ployer le cluster en ex\u00e9cutant <code>docker-compose</code> depuis le dossier contenant le fichier <code>docker-compose.yaml</code></p> <pre><code>docker-compose up -d\n</code></pre> <p> Attendre l'initialisation des diff\u00e9rents instances et puis acc\u00e9der aux serveurs</p> <p>Les serveurs sont accesible sur :</p> Serveur URL server1 http://localhost:7474 server2 http://localhost:7475 server3 http://localhost:7476 server4 http://localhost:7477 <p> V\u00e9rifier les seveurs</p> <p>Depuis un serveur se connecter sur Neo4j Browser et ex\u00e9cuter la commande</p> <pre><code>SHOW SERVERS\n</code></pre> Avec docker run <p>Il est possible de d\u00e9marrer les containers individuellement avec la commande <code>docker run</code>. Ci-apr\u00e8s un exemple pour cr\u00e9er un cluster de 3 serveurs. <pre><code>docker network create --driver=bridge neo4j-cluster\n\ndocker run --name=server1 --detach --network=neo4j-cluster \\\n--publish=7474:7474 --publish=7473:7473 --publish=7687:7687 \\\n--hostname=server1 \\\n--env NEO4J_initial_server_mode__constraint=PRIMARY \\\n--env NEO4J_dbms_cluster_discovery_endpoints=server1:5000,server2:5000,server3:5000 \\\n--env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \\\n--env NEO4j_server_bolt_advertised_address=localhost:7687 \\\n--env NEO4j_server_http_advertised_address=localhost:7474 \\\n--env NEO4J_AUTH=neo4j/Passw0rd \\\nneo4j:5.2.0-enterprise\n\ndocker run --name=server2 --detach --network=neo4j-cluster \\\n--publish=8474:7474 --publish=8473:7473 --publish=8687:7687 \\\n--hostname=server2 \\\n--env NEO4J_initial_server_mode__constraint=PRIMARY \\\n--env NEO4J_dbms_cluster_discovery_endpoints=server1:5000,server2:5000,server3:5000 \\\n--env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \\\n--env NEO4j_server_bolt_advertised_address=localhost:8687 \\\n--env NEO4j_server_http_advertised_address=localhost:8474 \\\n--env NEO4J_AUTH=neo4j/Passw0rd \\\nneo4j:5.2.0-enterprise\n\ndocker run --name=server3 --detach --network=neo4j-cluster \\\n--publish=9474:7474 --publish=9473:7473 --publish=9687:7687 \\\n--hostname=server3 \\\n--env NEO4J_initial_server_mode__constraint=PRIMARY \\\n--env NEO4J_dbms_cluster_discovery_endpoints=server1:5000,server2:5000,server3:5000 \\\n--env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \\\n--env NEO4j_server_bolt_advertised_address=localhost:9687 \\\n--env NEO4j_server_http_advertised_address=localhost:9474 \\\n--env NEO4J_AUTH=neo4j/Passw0rd \\\nneo4j:5.2.0-enterprise\n\ndocker run --name=read-server4 --detach --network=neo4j-cluster \\\n--publish=10474:7474 --publish=10473:7473 --publish=10687:7687 \\\n--hostname=read-server4 \\\n--env NEO4J_initial_server_mode__constraint=SECONDARY \\\n--env NEO4J_dbms_cluster_discovery_endpoints=server1:5000,server2:5000,server3:5000 \\\n--env NEO4J_ACCEPT_LICENSE_AGREEMENT=yes \\\n--env NEO4j_server_bolt_advertised_address=localhost:10687 \\\n--env NEO4j_server_http_advertised_address=localhost:10474 \\\n--env NEO4J_AUTH=neo4j/Passw0rd \\\nneo4j:5.3.0-enterprise\n</code></pre></p>"},{"location":"cluster.html#gestion-des-bases-de-donnees-du-cluster","title":"Gestion des bases de donn\u00e9es du cluster","text":""},{"location":"cluster.html#creer-une-base-de-donnees","title":"Cr\u00e9er une base de donn\u00e9es","text":"<p>La cr\u00e9ation d'une base de donn\u00e9es sur un cluster consiste \u00e0 sp\u00e9cifier la topologie d\u00e9sir\u00e9e : nombre de primary et secondary.</p> <p>Voir la r\u00e9f\u00e9rence de la commande CREATE DATABASE</p> <p> Cr\u00e9er une BD avec 2 primaires et 1 secondaire</p> <pre><code>CREATE DATABASE exemple TOPOLOGY 2 PRIMARIES 1 SECONDARY\n</code></pre> Attention <p>La cr\u00e9ation de la base de donn\u00e9es n'est r\u00e9alis\u00e9e que si le cluster est en mesure de satisfaire la topologie demand\u00e9e.</p> <p>Par exemple, si le cluster n'a pas 3 serveurs cette commande \u00e9choue.</p> <p> Afficher l'\u00e9tat de la topologie de la BD</p> <p><pre><code>SHOW DATABASES yield name, currentPrimariesCount, currentSecondariesCount, requestedPrimariesCount, requestedSecondariesCount\n</code></pre> et aussi </p> <p><pre><code>SHOW DATABASE exemple\n</code></pre>  Ajouter des donn\u00e9es en important, par exemple, la base Movie Graph</p>"},{"location":"cluster.html#modifier-la-topologie-une-base-de-donnees","title":"Modifier la topologie une base de donn\u00e9es","text":"<p>Voir la commande ALTER DATABASE</p> <p> Changer le topologie de la BD exemple</p> <pre><code>ALTER DATABASE exemple SET TOPOLOGY 1 PRIMARY 2 SECONDARIES\n</code></pre> Attention <p>La modification de topologie n'est r\u00e9ussie que si le cluster contient les serveurs n\u00e9cessaires.</p> <p>Pour une BD avec 1 unique primaire la transition automatique est impossible. Dance ce cas, il faut sauvegarder la BD, la supprimer puis la restaurer avec la nouvelle topologie.</p>"},{"location":"cluster.html#gestion-des-serveurs-du-cluster","title":"Gestion des serveurs du cluster","text":""},{"location":"cluster.html#modifier-un-serveur","title":"Modifier un serveur","text":"<p> Changer le nom du serveur <code>135ad202-5405-4d3c-9822-df39f59b823c</code> (utiliser l'id d'un serveur parmi ceux h\u00e9bergeant la BD exemple)</p> <p><pre><code>RENAME SERVER `135ad202-5405-4d3c-9822-df39f59b823c` TO 'SERVER01';\n</code></pre>  Ajouter une contrainte de mode </p> <pre><code>ALTER SERVER 'SERVER01' SET OPTIONS {modeConstraint:'SECONDARY'};\n</code></pre> <p> Le serveur SERVER01 ne peut \u00eatre que secondaire.</p>"},{"location":"cluster.html#supprimer-un-serveur","title":"Supprimer un serveur","text":"<p>La suppression d'un serveur depuis un cluster requiert 2 \u00e9tapes :</p> <ol> <li>D\u00e9saffecter les BD du serveur</li> <li>Supprimer le serveur</li> </ol> <p> R\u00e9cup\u00e9rer l'id du serveur</p> <pre><code>SHOW SERVERS yield name\n</code></pre> <p> D\u00e9saffecter les bases de donn\u00e9es de ce serveur</p> <pre><code>DEALLOCATE DATABASES FROM SERVER 'SERVER01';\n</code></pre> DRYRUN <p>La commande <code>DRYRUN</code> permet d'afficher comment les BD seront d\u00e9plac\u00e9es avant d'appliquer l'op\u00e9ration.</p> <pre><code>DEALLOCATE DATABASES FROM SERVER 'SERVER01';\n</code></pre> <p> Attendre l'op\u00e9ration de d\u00e9placement des BD en v\u00e9rifiant avec <code>SHOW SERVERS</code></p> <p> Supprimer le serveur</p> <pre><code>DROP SERVER 'SERVER01';\n</code></pre>"},{"location":"cluster.html#ajouter-un-serveur","title":"Ajouter un serveur","text":"<p> D\u00e9marrer le serveur et attendre la d\u00e9couverte du cluster.</p> <p> V\u00e9rifier avec <code>SHOW SERVERS</code> qu'il appara\u00eet avec l'\u00e9tat <code>FREE</code></p> <p> Activer le serveur</p> <p><pre><code>ENABLE SERVER '25a7efc7-d063-44b8-bdee-f23357f89f01' OPTIONS\n{modeConstraint:'PRIMARY', allowedDatabases:['exemple']};\n</code></pre>  La partie OPTIONS est facultative et peut \u00eatre remplac\u00e9e par une configuration du fichier neo4j.conf.</p> <p> Affectation de BD</p> <p>Le serveur ne recevra pas automatiquement une base de donn\u00e9es \u00e0 moins que l'un des \u00e9v\u00e9nements suivants soit d\u00e9clench\u00e9 et le cluster aie eu besoin de ce serveur :</p> <ul> <li>Cr\u00e9ation de nouvelle BD,</li> <li>Changement de topologie d'une DB existante,</li> <li>D\u00e9saffectation d'un autre serveur,</li> <li>Demande explicite de r\u00e9allocation des BD pour balancer le cluster avec <code>REALLOCATE DATABASES;</code></li> </ul>"},{"location":"cypher.html","title":"Cypher","text":""},{"location":"cypher.html#premiers-pas-avec-cypher","title":"Premiers pas avec Cypher","text":""},{"location":"cypher.html#base-de-donnees-exemple-movie-graph","title":"Base de donn\u00e9es exemple : Movie Graph","text":""},{"location":"cypher.html#noeuds-et-relations","title":"Noeuds et relations","text":"<p>C'est une BD graphe disponible avec Neo4j pour apprendre Cypher. Elle mod\u00e9lise les relations entre 2 noeuds : </p> <ul> <li>Person : repr\u00e9sentant une personne et peut \u00eatre un acteur, r\u00e9alisateur, produteur ou un spectateur </li> <li>Movie : un film</li> </ul> <p>Les relations possibles entre ces noeuds sont pr\u00e9sent\u00e9es dans le graphe ci-dessous.</p> <p></p> <p>Ce graphe comporte 133 noeuds de type Person et 38 Movie.</p>"},{"location":"cypher.html#proprietes","title":"Propri\u00e9t\u00e9s","text":"<p>Les noeuds Movie poss\u00e8de les propri\u00e9t\u00e9s :</p> <ul> <li>title : le titre du film qui est aussi son identifiant.</li> <li>tagline : r\u00e9sum\u00e9 du film.</li> <li>released : date de parution du film.</li> </ul> <p>Les noeuds Person poss\u00e8de les propri\u00e9t\u00e9s :</p> <ul> <li>name : le nom de la personne qui est aussi son identifiant.</li> <li>born : ann\u00e9e de naissabce.</li> </ul> <p>Les diff\u00e9rentes relations poss\u00e8dent aussi des propri\u00e9t\u00e9s :</p> Relation Propri\u00e9t\u00e9s ACTED_IN propri\u00e9t\u00e9 roles (liste des r\u00f4les d'un acteur dans un film) DIRECTED ... PRODUCED ... WROTE ... REVIEWED propri\u00e9t\u00e9s rating (\u00e9valuation) et summary (un commentaire)"},{"location":"cypher.html#creer-la-base-de-donnees","title":"Cr\u00e9er la base de donn\u00e9es","text":"Version Enterprise <p>La manipulation de plusieurs bases de donn\u00e9es n'est support\u00e9 qu'avec la version Enterprise. Dans ce cas, avant de proc\u00e9der aux op\u00e9rations qui suivent commencer par :</p> <ol> <li>Cr\u00e9er une base de donn\u00e9es \"MovieGraph\" <pre><code>CREATE DATABASE MovieGraph\n</code></pre></li> <li>Basculer ver la nouvelle base de donn\u00e9es <pre><code>:use MovieGraph\n</code></pre></li> </ol> <p> D\u00e9marrer le guide de la base Movie Graph \u00e0 partir du shell Neo4j</p> <pre><code>:guide movie-graph\n</code></pre> <p></p> <p> Cliquer sur Next puissur le bloc de code pour l'ins\u00e9rer dans le shell</p> <p></p> <p>Le code est disponible dans le fichier movie-graph.cypher</p> <p> Ex\u00e9cuter le code </p> <p> V\u00e9rifier le graphe complet </p> <pre><code>MATCH (n) RETURN n\n</code></pre> <p></p>"},{"location":"cypher.html#pattern-cypher","title":"Pattern Cypher","text":"<p>Le langage Cypher utilise des symboles sp\u00e9cifiques pour repr\u00e9senter les \u00e9l\u00e9ments du graphe dans ses requ\u00eates.</p> <p>Les neouds sont repr\u00e9sent\u00e9s par des parenth\u00e8ses (). Pour d\u00e9signer son type ou label on utilise : comme dans (:Person).</p> <p>Les relation sont not\u00e9es avec deux tirets reliant deux noeuds, par exemple : (:Person)--(:Movie).</p> <p>La direction de la relation est indiqu\u00e9e avec &gt; ou &lt; , comme (:Person)\u2192(:Movie) \u00e9quivalent \u00e0 (:Movie)\u2190(:Person).</p> <p>Le type de la relation peut \u00eatre ajout\u00e9 entre les tirets entre crochets , par exemple [:ACTED_IN].</p> <p>Les propri\u00e9t\u00e9s des noeuds et des relations sont ajout\u00e9s dans un bloc JSON.</p> <p>Des variables sont aussi ajout\u00e9es devant les labels comme (n:Person).</p> <p>Pour des chemins de taille variable (n:Person)-[*]-(b:Person).</p> <p>Pour des chemins de taille variable mais suivant un type de relation (n:Person)-[:ACTED*]-(b:Person).</p> <p>Pour des chemins d'une taille sp\u00e9cifique (n:Person)-[*3..5]-(b:Person) (relation de niveau entre 3 et 5, la valeur 0 \u00e9quivaut une absence de relation).</p> Exemple Cypher pattern <p><pre><code>(m:Movie {title: 'Cloud Atlas'})&lt;-[:ACTED_IN]-(p:Person)\n</code></pre> Ce pattern repr\u00e9sente tous les noeuds de type Person qui ont jou\u00e9 (ACTED_IN) dans le film, \"Cloud Atlas\".</p> Conventions <p>Voici quelques conventions \u00e0 suivre avec Cypher :</p> <ul> <li>Un label commence par majuscule : Person</li> <li>Une relation est toute en majuscules : ACTED_IN</li> <li>Une propri\u00e9t\u00e9 est en minuscule : birthDate</li> </ul>"},{"location":"cypher.html#lecture-de-donnees","title":"Lecture de donn\u00e9es","text":"<p>L'\u00e9quivalent de SELECT dans Cypher est la commande MATCH.</p> Syntaxe MATCH <pre><code>MATCH patter_cypher [WHERE &lt;condition&gt;] RETURN &lt;expression1&gt;, ... [SKIP &lt;entier&gt;]\n[LIMIT &lt;entier&gt;]\n[ORDER BY &lt;champ&gt; [DESC], ...]\n</code></pre> Sch\u00e9ma de la BD <p>Visualiser le sch\u00e9ma de la base de donn\u00e9es en cours permet de comprendre la structure du graphe de propri\u00e9t\u00e9s \u00e0 manipuler avant de commencer \u00e0 \u00e9crire des requ\u00eates. Ce sch\u00e9am peut \u00eatre g\u00e9n\u00e9r\u00e9 automatiquement avec la commande : <pre><code>CALL db.schema.visualization\n</code></pre></p> <p> Trouver tous les films</p> <p><pre><code>MATCH (n:Movie) RETURN n\n</code></pre> </p> <p> Trouver la date de sortie du film \"The Matrix\"</p> <pre><code>MATCH (n:Movie {title:'The Matrix'}) RETURN n.released as ann\u00e9e\n</code></pre> <p>ou </p> <pre><code>MATCH (n:Movie) WHERE n.title='The Matrix' RETURN n.released as ann\u00e9e\n</code></pre> <p></p> <p> Trouver les films r\u00e9alis\u00e9s par \"Clint Eastwood\".</p> <pre><code>MATCH (m:Movie)&lt;-[:DIRECTED]-(:Person {name:'Clint Eastwood'}) RETURN m\n</code></pre> <p></p> <p> Trouver 3 films sortis avant 1980</p> <p><pre><code>MATCH (m:Movie) WHERE m.released&lt;2000 RETURN m LIMIT 3\n</code></pre> </p> <p> Trouver les acteurs dont le pr\u00e9nom est \"Michael\"</p> <p><pre><code>MATCH (p:Person)-[:ACTED_IN]-&gt;()\nWHERE toLower(p.name) STARTS WITH 'michael'\nRETURN DISTINCT p.name\n</code></pre> </p> Cypher multi-ligne <p>Pour \u00e9crire du code Cypher sur plusieurs ligne, utiliser Shift+Enter pour retourner \u00e0 la ligne. Dans ce cas, pour ex\u00e9cuter le bloc appuyer sur Ctrl+Enter.</p> <p> Quels sont les r\u00e9alisateurs qui ont aussi jou\u00e9 un r\u00f4le dans le m\u00eame film qu'ils ont r\u00e9alis\u00e9.</p> <p><pre><code>MATCH (p:Person)-[:ACTED_IN]-&gt;(m:Movie)\nWHERE  exists( (p)-[:DIRECTED]-&gt;(m) )\nRETURN p, m\n</code></pre> </p> <p> Quels sont les commentaires laiss\u00e9s par les utilisateurs lors de l'\u00e9valuation du film \"The Da Vinci Code\".</p> <pre><code>MATCH (p:Person)-[r:REVIEWED]-&gt;(m:Movie)\nWHERE m.title='The Da Vinci Code' AND r.summary IS NOT NULL\nRETURN r.summary\n</code></pre> <p></p> <p> Trouver les personnes qui suivies par les personnes qu'une personne suit (comme la relation amis de mes amis).</p> <pre><code>MATCH (p:Person)-[:FOLLOWS*2]-&gt;(q:Person) WHERE p &lt;&gt; q\nRETURN p.name as Utilisateur,q.name as Second_niveau\n</code></pre> <p></p>"},{"location":"cypher.html#ecriture-de-donnees","title":"\u00c9criture de donn\u00e9es","text":""},{"location":"cypher.html#insertion-de-noeuds","title":"Insertion de noeuds","text":"<p>Pour cr\u00e9er des \u00e9l\u00e9ments de grpahe deux clauses sont utilis\u00e9es par Cypher : CREATE et MERGE.</p> <p>La diff\u00e9rence entre ces clause est que MERGE requiert la saisie d'une valeur pour l'identifiant et \u00e9vite d'avoir des doublons.</p> <pre><code>CREATE|MERGE &lt;cypher_pattern&gt;\n</code></pre> <p> Cr\u00e9er un nouveau noeud Person</p> <pre><code>MERGE (:Person {name:'Tom Cruise'})\n</code></pre> <p>Aucun noeud cr\u00e9\u00e9, parce qu'il est d\u00e9j\u00e0 existant.</p> <p></p> <p> Cr\u00e9er une relation entre noeuds existants </p> <p>\"Angela Scope\" a \u00e9valu\u00e9 le film \"Cloud Atlas\" et a donn\u00e9 un rating=95</p> <p><pre><code>MATCH (n:Person {name:'Angela Scopee'})\nMATCH (m:Movie {title:'Cloud Atlas'})\nMERGE (n)-[:REVIEWED {rating:95}]-&gt;(m)\n</code></pre> </p> <p> Cr\u00e9er une structure </p> <p>Ajouter un film 'Jurassic Park' sorti en 1993 et son r\u00e9alisateur \"Steven Spielberg\".</p> <pre><code>MERGE (:Movie {title:'Jurassic Park', released:1993})&lt;-[:DIRECTED]-(:Person {name:'Steven Spielberg'})\n</code></pre> <p></p>"},{"location":"cypher.html#mise-a-jour-de-noeuds","title":"Mise \u00e0 jour de noeuds","text":"<p>La clause MERGE sert aussi \u00e0 mettre \u00e0 jour les propri\u00e9t\u00e9s d'un noeud exitant. Il est possible de faire la mise \u00e0 jour en associant MATCH et SET. Cette derni\u00e8re permet de modifier la valeur d'un propri\u00e9t\u00e9 existante ou d\u00e9finir une nouvelle propri\u00e9t\u00e9. Pour supprimer une propri\u00e9t\u00e9 c'est REMOVE qui est utilis\u00e9e.</p> <p> Modifier l'\u00e9avluation de \"Angela Scope\" du film \"Cloud Atlas\" en 92</p> <pre><code>MATCH (n:Person {name:'Angela Scopee'})-[r:REVIEWED {rating:95}]-&gt;(m:Movie {title:'Cloud Atlas'})\nSET r.rating=92\nRETURN n,m,r\n</code></pre> <p></p> <p> Supprimer la propri\u00e9t\u00e9 released du film 'Jurassic Park'. </p> <p><pre><code>MATCH (m:Movie) WHERE m.title='Jurassic Park'\nREMOVE m.released\n</code></pre> </p> <p> Effectuer une mise \u00e0 jour selon le comportenent de MERGE </p> <pre><code>// Trouver ou cr\u00e9er une personne\nMERGE (p:Person {name: 'McKenna Grace'})\n\n// Ajouter cette propri\u00e9t\u00e9 `createdAt` si la personne est cr\u00e9\u00e9e\nON CREATE SET p.createdAt = datetime()\n\n// Ajouter lanpropri\u00e9t\u00e9 `updatedAt` si la personne existe et n a pas \u00e9t\u00e9 cr\u00e9\u00e9e\nON MATCH SET p.updatedAt = datetime()\n\n// Dans tous les cas modifier la propri\u00e9t\u00e9 `born`\nSET p.born = 2006\n\nRETURN p\n</code></pre> <p></p> <p> Ajouter un label \u00e0 noeud : ajouter le label Actor pour tous les Person qui ont au moins jou\u00e9 dans un film.</p> <pre><code>MATCH (p:Person)\nWHERE exists ((p)-[:DIRECTED]-())\nSET p:Director\n</code></pre> <p></p> Refactoring <p>L'ajout de label est une technique utilis\u00e9e pour optimiser les requ\u00eates par \"Refactoring\" du graphe. C'est \u00e0 dire changement du mod\u00e8le de graphe. Dans l'exemple pr\u00e9c\u00e9dent, nous avons ajout\u00e9 un label pour toute personne qui a r\u00e9alis\u00e9 au moins un film. Nous pouvons donc utiliser ce nouveau label pour interroger directement le graphe avec le pattern (d:Director). Neo4j recommande un nombre maximal de 4 labels par noeuds.</p> <p>Les figures suivantes permettent de comparer les plans d'ex\u00e9cution des 2 requ\u00eates :</p> <p></p> <p></p> <p> Supprimer tous les labels Director</p> <pre><code>MATCH (p:Director)\nREMOVE p:Director\n</code></pre> <p></p>"},{"location":"cypher.html#suppression","title":"Suppression","text":"<p>C'est DELETE apr\u00e8s avoir obtenu une r\u00e9f\u00e9rence vers l'\u00e9l\u00e9ment \u00e0 supprimer (avec MATCH par exemple).</p> <p> Supprimer le review de \"Angela Scope\" du film \"Cloud Atlas\".</p> <pre><code>MATCH (n:Person {name:'Angela Scopee'})-[r:REVIEWED]-&gt;(m:Movie {title:'Cloud Atlas'})\nDELETE r\n</code></pre> <p></p> Suppression d'un noeud et ses relations <p>Quand un noeud poss\u00e8de des relation Neo4j emp\u00eache sa suppression. Pour supprimer automatiquement un noeud avec toutes ses relation, il faut utiliser DETACH DELETE</p>"},{"location":"cypher.html#agregations","title":"Agr\u00e9gations","text":"<p>Les agr\u00e9gations sont calcul\u00e9s dans la clause RETURN \u00e0 travers des fonctions comme : COUNT, SUM, AVG, MIN, MAX, ...</p> <p> Calculer le nombre de films dans le graphe</p> <pre><code>MATCH (p:Person)\nRETURN count(p) AS Total\n</code></pre> <p></p> <p> Trouver le top 5 des acteurs et r\u00e9alisateurs ayant le plus de collaborations</p> <pre><code>MATCH (a:Person)-[:ACTED_IN]-&gt;(m:Movie)&lt;-[:DIRECTED]-(r:Person)\nRETURN a.name as Acteur, r.name as R\u00e9alisateur, count(*) AS collaborations\nORDER BY collaborations DESC\nLIMIT 5\n</code></pre> <p></p> <p> Pour chaque film afficher les acteurs et leur nombre</p> <pre><code>MATCH (m:Movie)&lt;-[:ACTED_IN]-(a:Person)\nRETURN m.title AS Film, collect(a.name) AS casting, count(*) AS nb_acteurs\n</code></pre> collect <p>La fonction collect permet de cr\u00e9er une liste des valeurs pour des structures de type parent-enfants ou 1-n. Dans cet exemple, un film (titre) a plusieurs acteurs. Collect permet de grouper les acteurs dans une liste pour ne pas r\u00e9p\u00e9ter le film avec chaque acteur. C'est comme effectuer un GROUP BY sur le titre du film mais sans perdre le d\u00e9tail des enfants (acteurs).</p> <p></p> <p> Quels sont les r\u00e9alisateurs de films sortis en 2008, 2009 et 2010</p> <pre><code>WITH [2008, 2009, 2010] AS ann\u00e9es\nUNWIND ann\u00e9es AS an\nMATCH (r:Person)-[:DIRECTED]-&gt;(m:Movie {released:an})\nRETURN an, collect(r.name) as r\u00e9alisateurs\n</code></pre> <p></p>"},{"location":"cypher.html#index-et-contraintes","title":"Index et contraintes","text":"<p>Les index permettent d'acc\u00e9l\u00e9rer les requ\u00eates et sont un outil indispensabe pour l'optimisation des requ\u00eates.</p> <p>Neo4j utilise 5 types d'index :</p> <ul> <li>RANGE</li> <li>LOOKUP</li> <li>TEXT</li> <li>FULLTEXT</li> <li>POINT</li> </ul> <pre><code>CREATE [RANGE|LOOKUP|TEXT|FULLTEXT|POINT] INDEX &lt;nom_index&gt; FOR (n:label) ON (l.prop1, ...) </code></pre> <p> Cr\u00e9er un index sur la date de sortie d'un film</p> <p><pre><code>CREATE INDEX idx_film_released FOR (m:Movie) ON (m.released)\n</code></pre>  Afficher les index</p> <pre><code>SHOW INDEXES\n</code></pre> <p></p> <p> Ajouter une contrainte d'unicit\u00e9 d'une propri\u00e9t\u00e9 </p> <pre><code>CREATE CONSTRAINT [constraint_name] [IF NOT EXISTS]\nFOR (n:LabelName)\nREQUIRE (n.propertyName_1, \u2026, n.propertyName_n) IS UNIQUE\n[OPTIONS \"{\" option: value[, ...] \"}\"]\n</code></pre> Autres types de contraintes <p>D'autres contraintes sont disponibles mais uniquement dans la version Enterprise comme :</p> <ul> <li>Existence de propri\u00e9t\u00e9 de noeud</li> <li>Existence de propri\u00e9t\u00e9 de relation</li> <li>Contrainte Node Key</li> </ul>"},{"location":"cypher.html#references-du-lanagage-cypher","title":"R\u00e9f\u00e9rences du lanagage Cypher","text":""},{"location":"cypher.html#types","title":"Types","text":"<p>Dans Neo4j, les types suivants sont support\u00e9s :</p> <ul> <li>Number</li> <li>String</li> <li>Boolean</li> <li>The spatial type Point</li> <li>Date, Time, LocalTime, DateTime, LocalDateTime et Duration</li> <li>Lsit et Map</li> </ul>"},{"location":"cypher.html#operateurs","title":"Op\u00e9rateurs","text":"Cat\u00e9gorie Op\u00e9rateurs Agr\u00e9gation <code>DISTINCT</code> Propri\u00e9t\u00e9s <code>.</code> acc\u00e8s, <code>[]</code>: acc\u00e8s dynamique, <code>=</code>: affectation, <code>+=</code>: affectation de certains types de propri\u00e9t\u00e9s Math\u00e9matiques <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>, <code>^</code> Comparaison <code>&lt;&gt;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>IS NULL</code>, <code>IS NOT NULL</code> Cha\u00eenes de caract\u00e8res <code>STARTS WITH</code>, <code>ENDS WITH</code>, <code>CONTAINS</code>, <code>=~</code> pour les expressions r\u00e9guli\u00e8res, <code>+</code> concat\u00e9nation Bool\u00e9ens <code>AND</code>, <code>OR</code>, <code>XOR</code>, <code>NOT</code> Dates et dur\u00e9es <code>+</code> et <code>-</code> entre dates et dur\u00e9es, <code>*</code> et <code>/</code> entre dur\u00e9es et nombres Dictionnaires (Map) <code>.</code> acc\u00e8s statique par cl\u00e9, <code>[]</code> acc\u00e8s dynamique par cl\u00e9 Tableaux (List) <code>+</code> concat\u00e9nation, <code>IN</code> test d'appartenance, <code>[]</code> acc\u00e8s \u00e0 un \u00e9l\u00e9ment"},{"location":"cypher.html#fonctions","title":"Fonctions","text":"Famille Exemples Pr\u00e9dicats all(), any(), exists(), isEmpty(), single() String left(), right(), substring(), trim(), toUpper(), toLower(), split(), replace(), ... List/Map keys(), labels(), nodes(), range(), relationships(), reverse(), size(), head(), last(), ... Maths abs(), ceil(), floor(), round(), rand(), isNaN(), ... Agr\u00e9gats min(), max(), sum(), count(), avg(), stdev(), ... Date/Time date(), datetime(), time(), datetime.fromepochmillis(), duration(), duration.between(), ...."},{"location":"cypher.html#manipulation-de-bases-de-donnees","title":"Manipulation de bases de donn\u00e9es","text":"<ul> <li>Lister les BD <pre><code>SHOW { DATABASE name | DATABASES | DEFAULT DATABASE | HOME DATABASE }\n[WHERE expression]\n</code></pre> <pre><code>SHOW { DATABASE name | DATABASES | DEFAULT DATABASE | HOME DATABASE }\nYIELD { * | field[, ...] } [ORDER BY field[, ...]] [SKIP n] [LIMIT n]\n[WHERE expression]\n[RETURN field[, ...] [ORDER BY field[, ...]] [SKIP n] [LIMIT n]]\n</code></pre></li> <li>Cr\u00e9er une BD <pre><code>CREATE DATABASE name [IF NOT EXISTS]\n[TOPOLOGY n PRIMAR{Y|IES} [m SECONDAR{Y|IES}]]\n[OPTIONS \"{\" option: value[, ...] \"}\"]\n[WAIT [n [SEC[OND[S]]]]|NOWAIT]\n</code></pre> <pre><code>CREATE OR REPLACE DATABASE name\n[TOPOLOGY n PRIMAR{Y|IES} [m SECONDAR{Y|IES}]]\n[OPTIONS \"{\" option: value[, ...] \"}\"]\n[WAIT [n [SEC[OND[S]]]]|NOWAIT]\n</code></pre> <pre><code>CREATE COMPOSITE DATABASE name [IF NOT EXISTS]\n[WAIT [n [SEC[OND[S]]]]|NOWAIT]\n</code></pre> <pre><code>CREATE OR REPLACE COMPOSITE DATABASE name\n[WAIT [n [SEC[OND[S]]]]|NOWAIT]\n</code></pre></li> <li>Modifier une BD <pre><code>ALTER DATABASE name [IF EXISTS]\n{\nSET ACCESS {READ ONLY | READ WRITE} |\nSET TOPOLOGY n PRIMAR{Y|IES} [m SECONDAR{Y|IES}]\n}\n</code></pre></li> <li>D\u00e9marrer une BD <pre><code>START DATABASE name [WAIT [n [SEC[OND[S]]]]|NOWAIT]\n</code></pre></li> <li>Arr\u00eater une BD <pre><code>STOP DATABASE name [WAIT [n [SEC[OND[S]]]]|NOWAIT]\n</code></pre></li> <li>Supprimer une BD <pre><code>DROP [COMPOSITE] DATABASE name [IF EXISTS] [{DUMP|DESTROY} [DATA]] [WAIT [n [SEC[OND[S]]]]|NOWAIT]\n</code></pre></li> </ul>"},{"location":"cypher.html#exercice","title":"Exercice","text":"<p>Soit la base de donn\u00e9es Northwind dont le sch\u00e9ma est le suivant :</p> <p></p> <ol> <li>Cr\u00e9er un nouveau container Neo4j pour l'exercice</li> <li>Imorter les donn\u00e9es en ex\u00e9cutant le code suivant : <pre><code>// tag::constraints[]\nCREATE CONSTRAINT FOR (o:Order) REQUIRE o.orderID IS UNIQUE;\n// end::constraints[]\n\n// tag::indexes[]\nCREATE INDEX FOR (m:Product) ON (m.productID);\nCREATE INDEX FOR (m:Product) ON (m.productName);\nCREATE INDEX FOR (m:Category) ON (m.categoryID);\nCREATE INDEX FOR (m:Employee) ON (m.employeeID);\nCREATE INDEX FOR (m:Supplier) ON (m.supplierID);\nCREATE INDEX FOR (m:Customer) ON (m.customerID);\nCREATE INDEX FOR (m:Customer) ON (m.customerName);\n// end::indexes[]\n\n// tag::nodes[]\n// Create customers\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/customers.csv\" AS row\nCREATE (:Customer {companyName: row.CompanyName, customerID: row.CustomerID, fax: row.Fax, phone: row.Phone});\n\n// Create products\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/products.csv\" AS row\nCREATE (:Product {productName: row.ProductName, productID: row.ProductID, unitPrice: toFloat(row.UnitPrice)});\n\n// Create suppliers\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/suppliers.csv\" AS row\nCREATE (:Supplier {companyName: row.CompanyName, supplierID: row.SupplierID});\n\n// Create employees\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/employees.csv\" AS row\nCREATE (:Employee {employeeID:row.EmployeeID,  firstName: row.FirstName, lastName: row.LastName, title: row.Title});\n\n// Create categories\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/categories.csv\" AS row\nCREATE (:Category {categoryID: row.CategoryID, categoryName: row.CategoryName, description: row.Description});\n\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/orders.csv\" AS row\nMERGE (order:Order {orderID: row.OrderID}) ON CREATE SET order.shipName =  row.ShipName;\n// end::nodes[]\n\n\n\n\n// tag::rels_orders[]\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/orders.csv\" AS row\nMATCH (order:Order {orderID: row.OrderID})\nMATCH (product:Product {productID: row.ProductID})\nMERGE (order)-[pu:PRODUCT]-&gt;(product)\nON CREATE SET pu.unitPrice = toFloat(row.UnitPrice), pu.quantity = toFloat(row.Quantity);\n\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/orders.csv\" AS row\nMATCH (order:Order {orderID: row.OrderID})\nMATCH (employee:Employee {employeeID: row.EmployeeID})\nMERGE (employee)-[:SOLD]-&gt;(order);\n\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/orders.csv\" AS row\nMATCH (order:Order {orderID: row.OrderID})\nMATCH (customer:Customer {customerID: row.CustomerID})\nMERGE (customer)-[:PURCHASED]-&gt;(order);\n// end::rels_orders[]\n\n// tag::rels_products[]\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/products.csv\" AS row\nMATCH (product:Product {productID: row.ProductID})\nMATCH (supplier:Supplier {supplierID: row.SupplierID})\nMERGE (supplier)-[:SUPPLIES]-&gt;(product);\n\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/products.csv\" AS row\nMATCH (product:Product {productID: row.ProductID})\nMATCH (category:Category {categoryID: row.CategoryID})\nMERGE (product)-[:PART_OF]-&gt;(category);\n// end::rels_products[]\n\n// tag::rels_employees[]\n\nLOAD CSV WITH HEADERS FROM \"https://github.com/neo4j-documentation/developer-resources/raw/gh-pages/data/northwind/employees.csv\" AS row\nMATCH (employee:Employee {employeeID: row.EmployeeID})\nMATCH (manager:Employee {employeeID: row.ReportsTo})\nMERGE (employee)-[:REPORTS_TO]-&gt;(manager);\n// end::rels_employees[]\n</code></pre></li> <li>R\u00e9pondre aux requ\u00eates suivantes :<ol> <li>Trouver les produits et leurs prix.</li> <li>Trouver les informations sur les produits 'Chocolade' &amp; 'Pavlova'.</li> <li>Trouver les informations sur les produits dont le nom commence par \"C\u201d et le prix &gt;50.</li> <li>Requ\u00eate pr\u00e9c\u00e9dente en consid\u00e9rant \"sales price\" au lieu du prix du produit.</li> <li>Montant Total des achats par client et produit.</li> <li>Top 10 des employ\u00e9s selon les commandes vendues.</li> <li>Un employ\u00e9 est rattach\u00e9 \u00e0 combien de personnes de fa\u00e7on directe ou indirecte. </li> <li>\u00c0 qui les personnes nomm\u00e9es \u201cRobert\u201d sont-ils rattach\u00e9es.</li> <li>Qui n'a pas de personne \u00e0 qui il est rattach\u00e9e ?</li> <li>Trouver les fournisseurs (Suppliers), le nombre de cat\u00e9gories qu'ils fournissent et la liste de ces cat\u00e9gories.</li> <li>Le client qui a achet\u00e9 le plus grand montant de la cat\u00e9gorie \"beverages\".</li> <li>Les 5 produits les plus populaires selon le nombre de commandes.</li> </ol> </li> </ol>"},{"location":"etl.html","title":"Importation de donn\u00e9es","text":""},{"location":"etl.html#importation-de-donnees-vers-neo4j","title":"Importation de donn\u00e9es vers Neo4j","text":""},{"location":"etl.html#limportation-de-donnnees-dans-neo4j","title":"L'importation de donnn\u00e9es dans Neo4j","text":"<p>Lorsque vous importer des donn\u00e9es dans Neo4j, vous avez typiquement un ensemble de fichiers sources qui ont \u00e9t\u00e9 obtenus \u00e0 partir de :</p> <ul> <li>SGBDR</li> <li>APIs Web</li> <li>R\u00e9pertoires de donn\u00e9es publics</li> <li>Outils de BI</li> <li>Excel</li> </ul> <p>Les types de fichiers sont typiquement CSV, JSON, XML, etc. Dans ce cours, vous apprendrer \u00e0 importer des donn\u00e9es CSV dans Neo4j en tant que noeuds, relations et leurs propri\u00e9t\u00e9s. Cypher poss\u00e8de une clause int\u00e9gr\u00e9e, LOAD CSV pour importer des fichiers CSV. Si vous avez un fichier JSON ou XML, vous dever utiliser la biblioth\u00e8que APOC pour importer les donn\u00e9es, mais vous pouver aussi importer des CSV avec APOC. Et Neo4j Data Importer vous permet d'importer des donn\u00e9es CSV sans \u00e9crire aucun code Cypher.</p> <p>Les donn\u00e9es dans les fichiers sources peuvent contenir plus de donn\u00e9es que ce dont vous avez besoin dans votre graphique. Il peut ne pas y avoir de correspondance 1-1 entre les donn\u00e9es d'un fichier CSV et ce que vous utiliserier comme n\u0153ud dans un mod\u00e8le de donn\u00e9es de graphe. De plus, les donn\u00e9es dans les fichiers sources peuvent repr\u00e9senter des types de donn\u00e9es qui ne sont pas support\u00e9s par Neo4j ou sp\u00e9cifi\u00e9s dans le mod\u00e8le de donn\u00e9es que vous impl\u00e9menter. Certaines donn\u00e9es dans les fichiers sources peuvent avoir besoin d'\u00eatre transform\u00e9es dans les types appropri\u00e9s.</p> <p>Les types de donn\u00e9es que vous pouver stocker comme propri\u00e9t\u00e9s dans Neo4j incluent :</p> <ul> <li>String </li> <li>Long </li> <li>Double </li> <li>Boolean</li> <li>Date/Datetime</li> <li>Point (Geospatial)</li> <li>StringArray </li> <li>LongArray </li> <li>DoubleArray </li> </ul> <p>Apr\u00e8s avoir compris les donn\u00e9es sources sur lesquelles vous dever travailler ainsi que le mod\u00e8le de donn\u00e9es graphique que vous aller impl\u00e9menter, vous pouver importer les donn\u00e9es dans Neo4j. Il y a deux fa\u00e7ons d'importer des donn\u00e9es CSV dans Neo4j que vous aller apprendre dans ce cours :</p> <ol> <li>Utiliser Neo4j Data Importer soit :<ul> <li>En ligne : https://data-importer.graphapp.io/</li> <li>Application Neo4j ETL Tool \u00e0 installer sur Neo4j Desktop et disponible sur : https://install.graphapp.io/</li> </ul> </li> <li>En \u00e9crivant du code Cypher pour effectuer l'importation.</li> </ol> <p>Dans les deux cas, l'importation implique la lecture des donn\u00e9es sources et leur utilisation pour cr\u00e9er des noeuds, des relations et des propri\u00e9t\u00e9s dans le graphe.</p>"},{"location":"etl.html#importation-avec-neo4j-data-importer","title":"Importation avec Neo4j Data Importer","text":"<p>Le mod\u00e8le de donn\u00e9es graphique que vous aller mettre en \u0153uvre est le suivant :</p> <p></p> <p>Remarquer les types des propri\u00e9t\u00e9s. Lorsque vous d\u00e9finisser le mapping pour l'importation, vous dever tenir compte des types qui peuvent \u00eatre automatiquement mapp\u00e9s (cha\u00eene, entier, d\u00e9cimal, date) et du fait que les valeurs cl\u00e9s de vos propri\u00e9t\u00e9s peuvent \u00eatre diff\u00e9rentes de celles des fichiers CSV.</p> <p> T\u00e9l\u00e9charger les fichiers CSV</p> <ol> <li>T\u00e9l\u00e9charger le fichier suivant movieData.zip  sur votre syst\u00e8me :</li> <li>D\u00e9compresser ce fichier pour obtenir les fichiers :<ul> <li>persons.csv</li> <li>movies.csv</li> <li>ratings.csv</li> <li>directed.csv</li> <li>acted_in.csv</li> </ul> </li> </ol> <p> Acc\u00e9der \u00e0 Neo4j Data Importer : http://data-importer.graphapp.io/</p> Connexion <p>Pour une connexion locale non s\u00e9curis\u00e9e, utiliser le protocole http et non https.</p> <p>Dans une fen\u00eatre de navigateur Web, ouvrer le Data Importer de Neo4j. Puis entrer les information de connexion \u00e0 votre instance locale :</p> <p></p> <p>Ensuite, vous devrier voir ceci :</p> <p></p> <p> Charger les fichiers CSV dans l'importateur de donn\u00e9es</p> <p>Dans l'onglet gauche Files, ajouter les cinq fichiers CSV que vous avez d\u00e9compress\u00e9s \u00e0 l'\u00e9tape 1.</p> <p>Apr\u00e8s les avoir ajout\u00e9s, vous devrier voir ceci :</p> <p></p> <p> D\u00e9finir le mapping des n\u0153uds Person</p> <ol> <li>Cliquer sur l'ic\u00f4ne <code>Add node</code> dans le volet Mod\u00e8le de graphique.</li> <li>Dans le volet D\u00e9tails du mapping, \u00e0 droite :</li> <li>Saisisser Person pour Label.</li> <li>S\u00e9lectionner le fichier persons.csv.</li> <li>Sous Properties, cliquer sur <code>Select from file</code>.<ol> <li>S\u00e9lectionner Tout.</li> <li>Cliquer sur Confirmer.</li> </ol> </li> </ol> <p></p> <p>Remarquer que certains noms de propri\u00e9t\u00e9s ne correspondent pas au mod\u00e8le de donn\u00e9es du graphique. Modifier-les comme suit :</p> <ul> <li>person_tmdbId  tmdbId</li> <li>person_imdbId  imdbId</li> <li>person_poster  poster</li> <li>person_url  url</li> </ul> <p>S\u00e9lectionner tmdbId comme l'identifiant unique qui sera utilis\u00e9 pour ces n\u0153uds Person.</p> <p>Vous devrier voir un indicateur vert dans le panneau de gauche indiquant que toutes les propri\u00e9t\u00e9s ont \u00e9t\u00e9 mapp\u00e9es : </p> <p> D\u00e9finir le mapping des n\u0153uds Movie</p> <ol> <li>R\u00e9p\u00e9ter les \u00e9tapes pr\u00e9c\u00e9dentes du n\u0153ud Person en utilisant le fichier movies.csv. </li> <li>Modifier les propri\u00e9t\u00e9s comme suit :<ul> <li>movie_tmdbId :right-arrow:  tmdbId</li> <li>movie_imdbId  imdbId</li> <li>movie_poster  poster</li> <li>movie_url  url</li> </ul> </li> <li>Remarquer \u00e9galement que certains types de propri\u00e9t\u00e9s ne correspondent pas \u00e0 ce que notre mod\u00e8le de donn\u00e9es d\u00e9fini. Modifier les types de propri\u00e9t\u00e9s comme suit :<ul> <li>budget  integer</li> <li>revenue  integer</li> </ul> </li> <li>S\u00e9lectionner movieId comme l'identifiant unique qui sera utilis\u00e9 pour ces n\u0153uds Movie. Noter que nous avons s\u00e9lectionn\u00e9 movieID comme ID unique car il est utilis\u00e9 dans les autres fichiers lorsque nous d\u00e9finissons les relations avec les films.</li> </ol> <p></p> <p> D\u00e9finir le mapping des n\u0153uds User</p> <p>Dans le volet D\u00e9tails du mapping, \u00e0 droite :</p> <ul> <li>Entrer User pour l'\u00e9tiquette.</li> <li>S\u00e9lectionner le fichier ratings.csv.</li> <li>Sous Propri\u00e9t\u00e9s, cliquer sur Ajouter \u00e0 partir du fichier.</li> <li>S\u00e9lectionner uniquement les propri\u00e9t\u00e9s userId et name. Les autres valeurs seront utilis\u00e9es ult\u00e9rieurement pour d\u00e9finir les relations.</li> <li>Cliquer sur Confirmer.</li> <li>Confirmer que userId a \u00e9t\u00e9 s\u00e9lectionn\u00e9 comme ID ; il s'agit de l'ID unique qui sera utilis\u00e9 pour ces n\u0153uds User.</li> </ul> <p></p> <p> d\u00e9finisser le mapping des relations DIRECTED</p> <ol> <li>Dans le volet Mod\u00e8le de graphique, faites glisser le bord du n\u0153ud Person sur le n\u0153ud Movie. Ceci d\u00e9finira une relation entre ces n\u0153uds dans le graphique.</li> <li>Dans le volet D\u00e9tails du mapping, \u00e0 droite :<ol> <li>Entrer DIRECTED pour le type.</li> <li>S\u00e9lectionner le fichier directed.csv.</li> <li>Dans la section From S\u00e9lectionner person_tmdbId comme ID de Person.</li> <li>Dans la section To S\u00e9lectionner movieId comme identifiant de Movie.</li> </ol> </li> </ol> <p></p> <p> d\u00e9finir le mapping des relations ACTED_IN</p> <ol> <li>R\u00e9p\u00e9ter les op\u00e9rations de l'\u00e9tape pr\u00e9c\u00e9dente en utilisant le fichier acted_in.csv.</li> <li>Dans la section From S\u00e9lectionner person_tmdbId comme ID de Person. et dans From movieId comme ID de Movie.</li> <li>Dans la section Properties, s\u00e9lectionner la propri\u00e9t\u00e9 role.</li> </ol> <p></p> <p> D\u00e9finir le mapping des relations RATED</p> <p>Noter que ce mapping r\u00e9utilisera le m\u00eame fichier que vous avez utilis\u00e9 pour d\u00e9finir les noeuds User ratings.csv.</p> <p>Dans le volet D\u00e9tails du mapping, \u00e0 droite : 1. Entrer RATED pour le type. 1. S\u00e9lectionner le fichier ratings.csv. 1. Dans la section From s\u00e9lectionner userId comme ID de User. 1. S\u00e9lectionner movieId comme identifiant de Movie dans la section To. 1. Dans la section Propri\u00e9t\u00e9s, s\u00e9lectionner la propri\u00e9t\u00e9 rating et timestamp. 1. Madifer le type de rating  integer</p> <p></p> <p> Enregistrer vos mappings</p> <p>Au cas o\u00f9 quelque chose se passerait mal pendant l'importation, nous vous recommandons de sauvegarder ce que vous avez mapp\u00e9.</p> <ol> <li>Cliquer sur le bouton ... \u00e0 droite du bouton <code>Run Import</code>.</li> <li>S\u00e9lectionner T\u00e9l\u00e9charger le mod\u00e8le. Le fichier portant le nom neo4j_importer_model_yyyy-mm-dd.json sera t\u00e9l\u00e9charg\u00e9 sur votre syst\u00e8me.</li> </ol> <p> Importer les donn\u00e9es CSV</p> <p>Cliquer sur le bouton <code>Run Import</code>.</p> <p></p> <p> V\u00e9rifier les donn\u00e9es import\u00e9es</p> <pre><code>MATCH (n) RETURN count(n)\n</code></pre> <p>Doit retourner 1097 noeuds.</p> <p><pre><code>MATCH ()-[r]-&gt;() RETURN count(r)\n</code></pre> Devrait avoir 4065 relations.</p>"},{"location":"etl.html#refactoring-post-importation-de-donnees","title":"Refactoring post importation de donn\u00e9es","text":"<p>Apr\u00e8s avoir utilis\u00e9 Data Importer pour importer les donn\u00e9es, vous allez utiliser Cypher pour remanier les donn\u00e9es import\u00e9es. Le remaniement de ce mod\u00e8le de donn\u00e9es impliquera :</p> <ul> <li>Transformer les types de donn\u00e9es de cha\u00eene de caract\u00e8res en liste de cha\u00eenes de caract\u00e8res \u00e0 valeurs multiples. <pre><code>MATCH (p:Person)\nSET p.born = CASE p.born WHEN \"\" THEN null ELSE date(p.born) END\nWITH p\nSET p.died = CASE p.died WHEN \"\" THEN null ELSE date(p.died) END\n\nMATCH (m:Movie)\nSET m.countries = split(coalesce(m.countries,\"\"), \"|\"),\nm.languages = split(coalesce(m.languages,\"\"), \"|\"),\nm.genres = split(coalesce(m.genres,\"\"), \"|\")\n</code></pre></li> <li>Ajouter des Label Actor et Director aux n\u0153uds Person. <pre><code>MATCH (p:Person)-[:ACTED_IN]-&gt;()\nWITH DISTINCT p SET p:Actor\nMATCH (p:Person)-[:DIRECTED]-&gt;()\nWITH DISTINCT p SET p:Director\n</code></pre></li> <li>Ajouter plus de contraintes selon le mod\u00e8le de donn\u00e9es du graphe. <pre><code>CREATE CONSTRAINT Genre_name IF NOT EXISTS\nFOR (x:Genre)\nREQUIRE x.name IS UNIQUE\n</code></pre></li> <li>Cr\u00e9er des noeuds Genre \u00e0 partir des donn\u00e9es des noeuds Movie. <pre><code>MATCH (m:Movie)\nUNWIND m.genres AS genre\nWITH m, genre\nMERGE (g:Genre {name:genre})\nMERGE (m)-[:IN_GENRE]-&gt;(g)\nMATCH (m:Movie)\nSET m.genres = null\n</code></pre></li> </ul>"},{"location":"etl.html#importer-les-donnees-avec-cypher","title":"Importer les donn\u00e9es avec Cypher","text":"<p> Supprimer tous les noeuds et relations</p> <pre><code>MATCH (u:User) DETACH DELETE u;\nMATCH (p:Person) DETACH DELETE p;\nMATCH (m:Movie) DETACH DELETE m;\nMATCH (n) DETACH DELETE n\n</code></pre> <p> Ajouter les contraintes apr\u00e8s v\u00e9rification</p> <p>V\u00e9rifier avec :</p> <pre><code>SHOW CONSTRAINTS\n</code></pre> <p>4 contraintes Unique doivent \u00eatre pr\u00e9sentes :</p> <ul> <li>Person.tmdbId</li> <li>Movie.movieId</li> <li>User.userId</li> <li>Genre.name</li> </ul> <p>Sinon ajouter ces contraintes. Par exemple, pour Genre.name :</p> <pre><code>CREATE CONSTRAINT Genre_name IF NOT EXISTS\nFOR (x:Genre)\nREQUIRE x.name IS UNIQUE n\n</code></pre> <p> Importer Movie et Genre</p> <pre><code>:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\n//process only Movie rows\nWITH row WHERE row.Entity = \"Movie\"\nMERGE (m:Movie {movieId: toInteger(row.movieId)})\nON CREATE SET\nm.tmdbId = toInteger(row.tmdbId),\nm.imdbId = toInteger(row.imdbId),\nm.imdbRating = toFloat(row.imdbRating),\nm.released = datetime(row.released),\nm.title = row.title,\nm.year = toInteger(row.year),\nm.poster = row.poster,\nm.runtime = toInteger(row.runtime),\nm.countries = split(coalesce(row.countries,\"\"), \"|\"),\nm.imdbVotes = toInteger(row.imdbVotes),\nm.revenue = toInteger(row.revenue),\nm.plot = row.plot,\nm.url = row.url,\nm.budget = toInteger(row.budget),\nm.languages = split(coalesce(row.languages,\"\"), \"|\")\nWITH m,split(coalesce(row.genres,\"\"), \"|\") AS genres\nUNWIND genres AS genre\nWITH m, genre\nMERGE (g:Genre {name:genre})\nMERGE (m)-[:IN_GENRE]-&gt;(g)\n</code></pre> <p> Importer les donn\u00e9es de Person</p> <pre><code>:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\nWITH row WHERE row.Entity = \"Person\"\nMERGE (p:Person {tmdbId: toInteger(row.tmdbId)})\nON CREATE SET\np.imdbId = toInteger(row.imdbId),\np.bornIn = row.bornIn,\np.name = row.name,\np.bio = row.bio,\np.poster = row.poster,\np.url = row.url,\np.born = CASE row.born WHEN \"\" THEN null ELSE date(row.born) END,\np.died = CASE row.died WHEN \"\" THEN null ELSE date(row.died) END\n</code></pre> <p> Ajout des relations ACTED_IN</p> <p><pre><code>:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\nWITH row WHERE row.Entity = \"Join\" AND row.Work = \"Acting\"\nMATCH (p:Person {tmdbId: toInteger(row.tmdbId)})\nMATCH (m:Movie {movieId: toInteger(row.movieId)})\nMERGE (p)-[r:ACTED_IN]-&gt;(m)\nON CREATE\nSET r.role = row.role\nSET p:Actor\n</code></pre>  Relation DIRECTED</p> <p><pre><code>:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\nWITH row WHERE row.Entity = \"Join\" AND row.Work = \"Directing\"\nMATCH (p:Person {tmdbId: toInteger(row.tmdbId)})\nMATCH (m:Movie {movieId: toInteger(row.movieId)})\nMERGE (p)-[r:DIRECTED]-&gt;(m)\nON CREATE\nSET r.role = row.role\nSET p:Director\n</code></pre>  Noeuds User</p> <pre><code>:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-ratingData.csv'\nAS row\nMATCH (m:Movie {movieId: toInteger(row.movieId)})\nMERGE (u:User {userId: toInteger(row.userId)})\nON CREATE SET u.name = row.name\nMERGE (u)-[r:RATED]-&gt;(m)\nON CREATE SET r.rating = toInteger(row.rating),\nr.timestamp = toInteger(row.timestamp)\n</code></pre> <p>Le code complet :</p> <pre><code>// clear the graph\nMATCH (u:User) DETACH DELETE u;\nMATCH (p:Person) DETACH DELETE p;\nMATCH (m:Movie) DETACH DELETE m;\nMATCH (n) DETACH DELETE n;\n// make sure all constraints exist\nCREATE CONSTRAINT Genre_name IF NOT EXISTS\nFOR (x:Genre)\nREQUIRE x.name IS UNIQUE;\nCREATE CONSTRAINT Movie_movieId IF NOT EXISTS FOR (x:Movie) REQUIRE x.movieId IS UNIQUE;\nCREATE CONSTRAINT Person_tmdbId IF NOT EXISTS FOR (x:Person) REQUIRE x.tmdbId IS UNIQUE;\nCREATE CONSTRAINT User_userId IF NOT EXISTS FOR (x:User) REQUIRE x.userId IS UNIQUE;\n// import the Movie data\n:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\n//process only Movie rows\nWITH row WHERE row.Entity = \"Movie\"\nMERGE (m:Movie {movieId: row.movieId})\nON CREATE SET\nm.tmdbId = row.tmdbId,\nm.imdbId = row.imdbId,\nm.imdbRating = toFloat(row.imdbRating),\nm.released = row.released,\nm.title = row.title,\nm.year = toInteger(row.year),\nm.poster = row.poster,\nm.runtime = toInteger(row.runtime),\nm.countries = split(coalesce(row.countries,\"\"), \"|\"),\nm.imdbVotes = toInteger(row.imdbVotes),\nm.revenue = toInteger(row.revenue),\nm.plot = row.plot,\nm.url = row.url,\nm.budget = toInteger(row.budget),\nm.languages = split(coalesce(row.languages,\"\"), \"|\")\nWITH m,split(coalesce(row.genres,\"\"), \"|\") AS genres\nUNWIND genres AS genre\nWITH m, genre\nMERGE (g:Genre {name:genre})\nMERGE (m)-[:IN_GENRE]-&gt;(g);\n// import the Person data\n:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\nWITH row WHERE row.Entity = \"Person\"\nMERGE (p:Person {tmdbId: row.tmdbId})\nON CREATE SET\np.imdbId = row.imdbId,\np.bornIn = row.bornIn,\np.name = row.name,\np.bio = row.bio,\np.poster = row.poster,\np.url = row.url,\np.born = CASE row.born WHEN \"\" THEN null ELSE date(row.born) END,\np.died = CASE row.died WHEN \"\" THEN null ELSE date(row.died) END;\n// set ACTED_IN relationships and Actor labels\n:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\nWITH row WHERE row.Entity = \"Join\" AND row.Work = \"Acting\"\nMATCH (p:Person {tmdbId: row.tmdbId})\nMATCH (m:Movie {movieId: row.movieId})\nMERGE (p)-[r:ACTED_IN]-&gt;(m)\nON CREATE\nSET r.role = row.role\nSET p:Actor;\n// set DIRECTED relationships and Director labels\n:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-movieData.csv'\nAS row\nWITH row WHERE row.Entity = \"Join\" AND row.Work = \"Directing\"\nMATCH (p:Person {tmdbId: row.tmdbId})\nMATCH (m:Movie {movieId: row.movieId})\nMERGE (p)-[r:DIRECTED]-&gt;(m)\nON CREATE\nSET r.role = row.role\nSET p:Director;\n// import the User data\n:auto USING PERIODIC COMMIT\nLOAD CSV WITH HEADERS\nFROM 'https://data.neo4j.com/importing/2-ratingData.csv'\nAS row\nMATCH (m:Movie {movieId: row.movieId})\nMERGE (u:User {userId: row.userId})\nON CREATE SET u.name = row.name\nMERGE (u)-[r:RATED]-&gt;(m)\nON CREATE SET r.rating = toInteger(row.rating),\nr.timestamp = toInteger(row.timestamp)\n</code></pre> Dossier import <p>Pour importer des fichiers CSV sur la machine locale, il faut les placer dans le dossier <code>import</code> sous le dossier d'installation de Neo4j.</p> <p>Pour le container docker ce dossier est sous le chemin <code>/var/lib/neo4j/import</code>. <pre><code>docker cp movieData neo4j:/var/lib/neo4j/import\n</code></pre> ou <code>movieData</code> est un dossier contenant les fichiers CSV.</p>"},{"location":"etl.html#exercice","title":"Exercice","text":"<p> Donn\u00e9es sur les restaurants et leurs inspections</p> <ul> <li>T\u00e9l\u00e9charger l'archive restaurants.zip</li> <li>D\u00e9compresser le contenu</li> <li>Examiner le contenu des fichiers csv (voir ci-dessous)</li> </ul> <p>Il s'agit de donn\u00e9es concernant des restaurant de New York et les r\u00e9sultats des inspections r\u00e9alis\u00e9es \u00e0 ces derniers. Ces donn\u00e9es sont respectivement dans les fichiers <code>restaurants.csv</code> et <code>restaurants_inspecteions.csv</code>.</p> <p></p> <p></p> <p> Travail \u00e0 faire</p> <p> Importer les donn\u00e9es sur Neo4j en cr\u00e9ant le graphe de donn\u00e9es (\u00e0 exporter sous le format PNG) en consid\u00e9rant les requ\u00eates suivantes :</p> <ul> <li>Chercher les restaurants par sp\u00e9cialit\u00e9 (cuisinetype).</li> <li>Chercher les restaurants par Quartier (borough).</li> <li>Chercher les restaurants par code de violation.</li> </ul> <p> Donner les requ\u00eates Cypher pour trouver :</p> <ol> <li>Les restaurants de sp\u00e9cialit\u00e9 chinoise dans le quartier du QUEENS.</li> <li>Le restaurant ayant commis le plus grand nombre de violations.</li> <li>Les restaurants du BRONX ayant des violations de code 04L.</li> </ol>"},{"location":"installation.html","title":"Installation","text":""},{"location":"installation.html#installation-de-neo4j","title":"Installation de Neo4j","text":""},{"location":"installation.html#formes-de-deploiement-et-versions","title":"Formes de d\u00e9ploiement et versions","text":"<p>Neo4j est disponible pour un d\u00e9ploiement on-premises ou comme un service sur le cloud sous le nom AuraDB.</p> <p>Pour une installation locale, il y a 2 versions :</p> <ol> <li>Neo4j Community Edition : version gratuite de base.</li> <li>Neo4j Enterprise Edition : n\u00e9cessite des licences pour des outils suppl\u00e9mentaires comme Bloom et Neo4j Ops Manager et offre des fonctionnalit\u00e9 de s\u00e9curit\u00e9 et de haute disponibilit\u00e9.</li> </ol> <p>Une comparaison est faite dans le tableau ci-apr\u00e8s :</p> <p></p> <p>Pour chacune des 2 versions, il y a 3 formes de distributions :</p> <ol> <li>/ Binaires pour Linux/Mac.</li> <li> Binaires pour Windows.</li> <li> Image Docker.</li> </ol> <p>L'offre cloud se d\u00e9cline en 3 formules :</p> <ol> <li>AuraDB Free (Gratuite) : pour apprentissage et prototypage avec des graphes ne d\u00e9passant pas 200K noeuds et 400K relations. Pour s'inscrire : https://console.neo4j.io</li> <li>AuraDB Professional : Jusqu'\u00e0 64GB/instance avec nombre d'instances illimit\u00e9 et service de sauvegarde.</li> <li>AuraDB Enterprise : Jusqu'\u00e0 384 GB/instance et une disponibilit\u00e9 de 99.95%, RBAC, ...</li> </ol>"},{"location":"installation.html#installation-avec-docker","title":"Installation avec Docker","text":""},{"location":"installation.html#installation","title":"Installation","text":"<p> T\u00e9l\u00e9charger l'image officielle de Neo4j (ici la version 5.2.0)</p> <pre><code>docker pull neo4j:5.2.0\n</code></pre> <p> Cr\u00e9er un container</p> <p>Version Community</p> <pre><code>docker run -d --name neo4j -p 7474:7474 -p 7687:7687 -e NEO4J_AUTH=neo4j/test neo4j:5.2.0\n</code></pre> <p>**Version Enterprise</p> <pre><code>run -d --name neo4je -p 7474:7474 -p 7687:7687 -e NEO4J_AUTH=neo4j/test -e NEO4J_ACCEPT_LICENSE_AGREEMENT=yes neo4j:5.2.0-enterprise\n</code></pre>"},{"location":"installation.html#verification","title":"V\u00e9rification","text":"<p>Pour v\u00e9rifier que le container est en cours d'ex\u00e9cution :</p> <pre><code>docker ps </code></pre> <p> Se connecter \u00e0 Neo4j Browser sur http://localhost:7474 </p> <p>Entrer les param\u00e8tres de connexion login: neo4j et password: test. Ensuite, cliquer sur Connect.</p> <p></p> <p>En cas de succ\u00e8s, Browser affiche :</p> <p></p> <p>Cliquer sur l'icone Database pour afficher les informations de la connexion</p> <p></p> <p> Entrer des requ\u00eates</p> <p>Pour saisir une requ\u00eate, placer le curseur devant l'invite neo4j$</p> Browser <p>Browser est un outil inclus dans toutes les versions de Neo4j permettant de saisir de fa\u00e7on interactives les requ\u00eates en Cypher et interagier avec le SGBD ainsi que visualiser le r\u00e9sultat des requ\u00eates.</p>"},{"location":"installation.html#demarrerarreter-neo4j","title":"D\u00e9marrer/Arr\u00eater Neo4j","text":"<p>Maintenant, il est plus simple de d\u00e9marrer ou arr\u00eater Neo4j avec le container Docker d\u00e9j\u00e0 cr\u00e9\u00e9.</p> <ol> <li>Pour d\u00e9marrer : <pre><code>docker start neo4j\n</code></pre></li> <li>Pour Arr\u00eater : <pre><code>docker stop neo4j\n</code></pre></li> </ol>"},{"location":"installation.html#installation-de-neo4j-desktop","title":"Installation de Neo4j Desktop","text":"<p>Neo4j Desktop est un IDE destin\u00e9 au d\u00e9veloppeur Neo4j. C'est aussi un environnement d'administration des instances Neo4j locales ou distantes. Neo4j Desktop inclut un licence Developer pour Neo4j Enterprise Edition permettant de manipuler et teser toutes les fonctionnalit\u00e9s et le outils compl\u00e9mentaires. Toutefois, il ne convient pas pour un environnement de production ni pour un fonctionnement en mode cluster.</p> <p>Il est possible d'installer et mettre \u00e0 jour des GraphApps ou plugins.</p> <p> T\u00e9l\u00e9charger Neo4j Desktop \u00e0 partir du centre de t\u00e9l\u00e9chargement de Neo4j</p> <p>Remplir le formulaire et commencer le t\u00e9l\u00e9chargeement.</p> <p></p> <p> Enregistrer la licence</p> <p></p> <p> D\u00e9marrer l'installation de Neo4j Desktop</p> <p>Selon la version de votre syst\u00e8me :</p> <ul> <li> : Fichier .exe</li> <li>:fontawesomw-brands-linux: :  Fichier .AppImage (\u00e0 rendre ex\u00e9cutable avec <code>chmod  +x fichier.AppImage</code>)</li> <li> : Fichier .dmg</li> </ul> <p>Entrer le code de licence fourni dans l'\u00e9tape pr\u00e9c\u00e9dente puis Create local Graph.</p> <p> </p> <p> D\u00e9marrer la base de donn\u00e9es</p> <p></p> <p> Lancer Neo4j Desktop et acc\u00e9der \u00e0 l'instance de base de donn\u00e9es avec Browser </p> <p>Cliquer sur la bouton Manage de la base de donn\u00e9es cr\u00e9\u00e9e et dans l'\u00e9cran suivant sur le bouton Open Browser</p> <p> </p>"},{"location":"python.html","title":"Pilote Python","text":""},{"location":"python.html#pilote-python-pour-neo4j","title":"Pilote Python pour Neo4j","text":""},{"location":"python.html#_1","title":"Pilote Python","text":""}]}